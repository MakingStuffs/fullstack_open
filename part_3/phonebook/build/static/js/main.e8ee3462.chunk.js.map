{"version":3,"sources":["components/Input.js","components/Button.js","components/Form.js","components/Persons.js","components/Footer.js","components/Notification.js","services/db.js","App.js","index.js"],"names":["Input","type","onChange","Button","onClick","text","Form","props","nameChangeHandler","numberChangeHandler","submitHandler","Persons","persons","filter","clickHandler","person","name","toLowerCase","includes","map","filteredPerson","key","id","number","Footer","className","Notification","message","notificationStyle","padding","border","fail","fontSize","borderRadius","backgroundColor","boxShadow","zIndex","maxWidth","style","content","baseUrl","getAll","a","request","axios","get","then","response","data","addOne","newObject","post","deleteOne","delete","updateOne","updatedObject","put","App","useState","setPersons","newFilter","setNewFilter","newName","setNewName","newNumber","setNewNumber","notificationMessage","setNotificationMessage","updateRecordHandler","toUpdate","record","find","window","confirm","db","setTimeout","catch","error","updateName","updateNumber","useEffect","dbService","people","event","target","value","preventDefault","console","log","undefined","concat","removeRecordHandler","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e8ee3462.chunk.js","sourcesContent":["import React from 'react';\n\nconst Input = ({ type, onChange }) => <input onChange={onChange} type={type} />;\n\nexport default Input;","import React from \"react\";\n\nconst Button = ({ type, onClick, text }) => (\n  <button onClick={onClick} type={type}>\n    {text}\n  </button>\n);\n\nexport default Button;\n","import React from \"react\";\nimport Input from \"./Input\";\nimport Button from \"./Button\";\n\nconst Form = (props) => {\n  const { nameChangeHandler, numberChangeHandler, submitHandler } = props;\n  \n  return (\n    <form>\n      <label>Name: </label>\n      <Input onChange={nameChangeHandler} type=\"text\" />\n      <label>Number: </label>\n      <Input onChange={numberChangeHandler} type=\"number\" />\n      <Button onClick={submitHandler} type=\"submit\" text=\"submit\" />\n    </form>\n  );\n};\n\nexport default Form;\n","import React from \"react\";\nimport Button from \"./Button\";\n\nconst Persons = ({ persons, filter, clickHandler }) => {\n  return (\n    <ul>\n      {persons\n        .filter((person) =>\n          person.name.toLowerCase().includes(filter.toLowerCase())\n        )\n        .map((filteredPerson) => (\n          <li key={filteredPerson.id}>\n            {filteredPerson.name} - {filteredPerson.number}\n            <Button\n              onClick={() => clickHandler(filteredPerson.id)}\n              type=\"submit\"\n              text=\"Delete\"\n            />\n          </li>\n        ))}\n    </ul>\n  );\n};\n\nexport default Persons;\n","import React from 'react';\nconst Footer = () => <footer className=\"footer\">Made with Love by Making Stuffs</footer>;\nexport default Footer;","import React from 'react';\n\nconst Notification = ({message}) => {\n    if(message === null) return null;\n    const notificationStyle = {\n        padding: '2rem',\n        border: `2px solid ${message.fail === true ? 'red' : 'green'}`,\n        fontSize: 16,\n        borderRadius: 10,\n        backgroundColor: '#fff',\n        boxShadow: '0.2rem 0.2rem 0.6rem rgba(0,0,0,0.3)',\n        zIndex: \"2\",\n        maxWidth: 300\n    };\n    return (\n        <div className=\"notification\">\n            <p style={notificationStyle}>\n            {message.content}\n            </p>\n        </div>\n    );\n};\n\nexport default Notification;","import axios from \"axios\";\nconst baseUrl = \"/api/persons\";\n\nconst getAll = async () => {\n  const request = axios.get(baseUrl);\n  return request.then((response) => response.data);\n};\n\nconst addOne = async (newObject) => {\n  const request = axios.post(baseUrl, newObject);\n  return request.then((response) => response.data);\n};\n\nconst deleteOne = async (id) => {\n  const request = axios.delete(`${baseUrl}/${id}`);\n  return request.then((response) => response.data);\n};\n\nconst updateOne = async (updatedObject) => {\n  const request = axios.put(`${baseUrl}/${updatedObject.id}`, updatedObject);\n  return request.then((response) => response.data);\n};\n\nexport default { getAll, addOne, deleteOne, updateOne };\n","import React, { useState, useEffect } from \"react\";\nimport Input from \"./components/Input\";\nimport Form from \"./components/Form\";\nimport Persons from \"./components/Persons\";\nimport Footer from \"./components/Footer\";\nimport Notification from \"./components/Notification\";\nimport dbService from \"./services/db\";\nimport db from \"./services/db\";\n\nconst App = () => {\n  const [persons, setPersons] = useState([]);\n  const [newFilter, setNewFilter] = useState(\"\");\n  const [newName, setNewName] = useState(\"\");\n  const [newNumber, setNewNumber] = useState(\"\");\n  const [notificationMessage, setNotificationMessage] = useState(null);\n\n  const nameChangeHandler = (event) => {\n    setNewName(event.target.value);\n  };\n  const numberChangeHandler = (event) => {\n    setNewNumber(event.target.value);\n  };\n  const filterChangeHandler = (event) => {\n    setNewFilter(event.target.value);\n  };\n\n  const removeRecordHandler = (id) => {\n    const person = persons.find((person) => person.id === id);\n    if (\n      window.confirm(\n        `Are you sure you wish to delete the entry for ${person.name}`\n      )\n    ) {\n      dbService\n        .deleteOne(id)\n        .then((response) => {\n          console.log(response);\n          setPersons(persons.filter((person) => person.id !== id));\n          setNotificationMessage({\n            content: `All information related to ${person.name} has been removed from the database.`,\n            fail: false,\n          });\n          setTimeout(() => {\n            setNotificationMessage(null);\n          }, 5000);\n        })\n        .catch((error) => {\n          console.log(error);\n          setNotificationMessage({\n            content: `It looks as though there has been an error removing ${person.name} from the database`,\n            fail: true,\n          });\n          setTimeout(() => {\n            setNotificationMessage(null);\n          }, 5000);\n        });\n    }\n  };\n\n  const addRecordHandler = (record) => {\n    dbService\n      .addOne(record)\n      .then((response) => {\n        setPersons(persons.concat(response));\n        setNotificationMessage({\n          content: `${response.name} was successfully added to the phone book with the number ${response.number}`,\n          fail: false,\n        });\n        setTimeout(() => {\n          setNotificationMessage(null);\n        }, 5000);\n      })\n      .catch((error) => {\n        console.log(error);\n        setNotificationMessage({\n          content: `${error.response.data}`,\n          fail: true,\n        });\n        setTimeout(() => {\n          setNotificationMessage(null);\n        }, 5000);\n      });\n  };\n\n  const updateNumber = () => {\n    let record = {\n      ...persons.find(\n        (person) => person.name.toLowerCase() === newName.toLowerCase()\n      ),\n    };\n    const message = `${record.name} is already in the phone book. Would you like to update the phone number to ${newNumber}?`;\n    if (window.confirm(message)) {\n      record.number = newNumber;\n      db.updateOne(record)\n        .then((response) => {\n          setPersons(\n            persons.map((person) => (person.id !== record.id ? person : record))\n          );\n          setNotificationMessage({\n            content: `The number associated with ${response.name} has been changed to ${response.number}`,\n            fail: false,\n          });\n          setTimeout(() => {\n            setNotificationMessage(null);\n          }, 5000);\n        })\n        .catch((error) => {\n          setNotificationMessage({\n            content: `It looks as though there has been an error. The number for ${record.name} has not been updated.`,\n            fail: true,\n          });\n          setTimeout(() => {\n            setNotificationMessage(null);\n          }, 5000);\n        });\n    }\n  };\n\n  const updateName = () => {\n    let record = { ...persons.find((person) => person.number === newNumber) };\n    const message = `${record.number} is already in the phone book under the name ${record.name}. Would you like to change the name to ${newName}?`;\n    if (window.confirm(message)) {\n      record.name = newName;\n\n      db.updateOne(record)\n        .then((response) => {\n          setPersons(\n            persons.map((person) => (person.id !== record.id ? person : record))\n          );\n          setNotificationMessage({\n            content: `The name associated with the number ${response.number} has been changed to ${response.name}`,\n            fail: false,\n          });\n          setTimeout(() => {\n            setNotificationMessage(null);\n          }, 5000);\n        })\n        .catch((error) => {\n          setNotificationMessage({\n            content: `It looks as though there has been an error. The name associated with ${record.number} has not been updated.`,\n            fail: true,\n          });\n          setTimeout(() => {\n            setNotificationMessage(null);\n          }, 5000);\n        });\n    }\n  };\n\n  const updateRecordHandler = (toUpdate) =>\n    toUpdate === \"name\" ? updateName() : updateNumber();\n\n  const submitHandler = (event) => {\n    event.preventDefault();\n    console.log(newName, newNumber);\n    return !newName || newName === undefined\n      ? (setNotificationMessage({\n          content: \"It looks like you haven't entered a name\",\n          fail: true,\n        }),\n        setTimeout(() => setNotificationMessage(null), 5000))\n      : !newNumber || newNumber === undefined\n      ? (setNotificationMessage({\n          content: \"It looks like you haven't entered a number\",\n          fail: true,\n        }),\n        setTimeout(() => setNotificationMessage(null), 5000))\n      : persons.find(\n          (person) => person.name.toLowerCase() === newName.toLowerCase()\n        )\n      ? updateRecordHandler(\"number\")\n      : persons.find((person) => person.number === newNumber)\n      ? updateRecordHandler(\"name\")\n      : addRecordHandler({\n          name: newName,\n          number: newNumber,\n        });\n  };\n\n  useEffect(() => {\n    dbService.getAll().then((people) => setPersons(people));\n  }, []);\n\n  return (\n    <div className=\"phonebook\">\n      <Notification message={notificationMessage} />\n      <h2>Phone Book</h2>\n\n      <div className=\"filter\">\n        <h3>Filter Results</h3>\n        <Input onChange={filterChangeHandler} type=\"text\" />\n      </div>\n      <Form\n        numberChangeHandler={numberChangeHandler}\n        nameChangeHandler={nameChangeHandler}\n        submitHandler={submitHandler}\n      />\n      <div className=\"list\">\n        <h3>Phone Numbers</h3>\n        <Persons\n          persons={persons}\n          filter={newFilter}\n          clickHandler={(id) => removeRecordHandler(id)}\n        />\n      </div>\n      <Footer />\n    </div>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport './index.css';\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}