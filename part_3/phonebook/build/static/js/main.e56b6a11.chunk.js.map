{"version":3,"sources":["components/Input.js","components/Button.js","components/Form.js","components/Persons.js","components/Notification.js","services/db.js","App.js","index.js"],"names":["Input","type","onChange","Button","onClick","text","Form","props","nameChangeHandler","numberChangeHandler","submitHandler","Persons","persons","filter","clickHandler","person","name","toLowerCase","includes","map","filteredPerson","key","number","id","Notification","message","notificationStyle","padding","border","fail","fontSize","borderRadius","style","content","baseUrl","console","log","getAll","a","request","axios","get","fakeRecord","then","response","data","concat","addOne","newObject","post","deleteOne","delete","updateOne","updatedObject","put","App","useState","setPersons","newFilter","setNewFilter","newName","setNewName","newNumber","setNewNumber","notificationMessage","setNotificationMessage","updateRecordHandler","toUpdate","record","find","window","confirm","db","setTimeout","catch","error","useEffect","dbService","people","event","target","value","preventDefault","removeRecordHandler","ReactDOM","render","document","getElementById"],"mappings":"qMAIeA,EAFD,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,SAAT,OAAwB,2BAAOA,SAAUA,EAAUD,KAAMA,KCMxDE,EANA,SAAC,GAAD,IAAGF,EAAH,EAAGA,KAAMG,EAAT,EAASA,QAASC,EAAlB,EAAkBA,KAAlB,OACb,4BAAQD,QAASA,EAASH,KAAMA,GAC7BI,ICcUC,EAdF,SAACC,GAAW,IACfC,EAA0DD,EAA1DC,kBAAmBC,EAAuCF,EAAvCE,oBAAqBC,EAAkBH,EAAlBG,cAEhD,OACE,8BACE,yCACA,kBAAC,EAAD,CAAOR,SAAUM,EAAmBP,KAAK,SACzC,2CACA,kBAAC,EAAD,CAAOC,SAAUO,EAAqBR,KAAK,WAC3C,kBAAC,EAAD,CAAQG,QAASM,EAAeT,KAAK,SAASI,KAAK,aCS1CM,EAnBC,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAASC,EAAZ,EAAYA,OAAQC,EAApB,EAAoBA,aAApB,OACZ,4BACGF,EACEC,QAAO,SAACE,GAAD,OACNA,EAAOC,KAAKC,cAAcC,SAASL,EAAOI,kBAE3CE,KAAI,SAACC,GAAD,OACH,wBAAIC,IAAKD,EAAeJ,MACrBI,EAAeJ,KADlB,MAC2BI,EAAeE,OACxC,kBAAC,EAAD,CACElB,QAAS,kBAAMU,EAAaM,EAAeG,KAC3CtB,KAAK,SACLI,KAAK,iBCEJmB,EAfM,SAAC,GAAe,IAAdC,EAAa,EAAbA,QACnB,GAAe,OAAZA,EAAkB,OAAO,KAC5B,IAAMC,EAAoB,CACtBC,QAAS,OACTC,OAAO,aAAD,QAAgC,IAAjBH,EAAQI,KAAgB,MAAQ,SACrDC,SAAU,GACVC,aAAc,IAElB,OACI,yBAAKC,MAAON,GACPD,EAAQQ,U,uCCXfC,EAAU,eAChBC,QAAQC,IAAIF,GACZ,IAqBe,GAAEG,OArBL,uCAAG,8BAAAC,EAAA,6DACPC,EAAUC,IAAMC,IAAIP,GACpBQ,EAAa,CAAEnB,GAAI,IAAKP,KAAM,gBAAiBM,OAAQ,eAFhD,kBAGNiB,EAAQI,MAAK,SAACC,GAAD,OAAcA,EAASC,KAAKC,OAAOJ,OAH1C,2CAAH,qDAqBaK,OAfb,uCAAG,WAAOC,GAAP,eAAAV,EAAA,6DACPC,EAAUC,IAAMS,KAAKf,EAASc,GADvB,kBAENT,EAAQI,MAAK,SAACC,GAAD,OAAcA,EAASC,SAF9B,2CAAH,sDAeqBK,UAVlB,uCAAG,WAAO3B,GAAP,eAAAe,EAAA,6DACVC,EAAUC,IAAMW,OAAN,UAAgBjB,EAAhB,YAA2BX,IAD3B,kBAETgB,EAAQI,MAAK,SAACC,GAAD,OAAcA,EAASC,SAF3B,2CAAH,sDAU6BO,UAL7B,uCAAG,WAAOC,GAAP,eAAAf,EAAA,6DACVC,EAAUC,IAAMc,IAAN,UAAapB,EAAb,YAAwBmB,EAAc9B,IAAM8B,GAD5C,kBAETd,EAAQI,MAAK,SAACC,GAAD,OAAcA,EAASC,SAF3B,2CAAH,uDCqKAU,EAhLH,WAAO,IAAD,EACcC,mBAAS,IADvB,mBACT5C,EADS,KACA6C,EADA,OAEkBD,mBAAS,IAF3B,mBAETE,EAFS,KAEEC,EAFF,OAGcH,mBAAS,IAHvB,mBAGTI,EAHS,KAGAC,EAHA,OAIkBL,mBAAS,IAJ3B,mBAITM,EAJS,KAIEC,EAJF,OAKsCP,mBAAS,MAL/C,mBAKTQ,EALS,KAKYC,EALZ,KAoEVC,EAAsB,SAACC,GAC3B,GAAgB,SAAbA,EAAqB,CACtB,IAAIC,EAAM,eAAOxD,EAAQyD,MAAK,SAACtD,GAAD,OAAYA,EAAOC,KAAKC,gBAAkB2C,EAAQ3C,kBAC1EQ,EAAO,UAAM2C,EAAOpD,KAAb,uFAAgG8C,EAAhG,KACVQ,OAAOC,QAAQ9C,KAChB2C,EAAO9C,OAASwC,EAChBU,EAAGpB,UAAUgB,GACZzB,MAAK,SAAAC,GACJa,EAAW7C,EAAQO,KAAI,SAAAJ,GAAM,OAAIA,EAAOQ,KAAO6C,EAAO7C,GAAKR,EAASqD,MACpEH,EAAuB,CACrBhC,QAAQ,8BAAD,OAAgCW,EAAS5B,KAAzC,gCAAqE4B,EAAStB,QACrFO,MAAM,IAER4C,YAAW,WACTR,EAAuB,QACtB,QAEJS,OAAM,SAAAC,GACLV,EAAuB,CACrBhC,QAAQ,8DAAD,OAAgEmC,EAAOpD,KAAvE,0BACPa,MAAM,IAER4C,YAAW,WACTR,EAAuB,QACtB,aAGF,CACL,IAAIG,EAAM,eAAOxD,EAAQyD,MAAK,SAACtD,GAAD,OAAYA,EAAOO,SAAWwC,MACtDrC,EAAO,UAAM2C,EAAO9C,OAAb,wDAAmE8C,EAAOpD,KAA1E,kDAAwH4C,EAAxH,KACVU,OAAOC,QAAQ9C,KAChB2C,EAAOpD,KAAO4C,EAEdY,EAAGpB,UAAUgB,GACZzB,MAAK,SAAAC,GACJa,EAAW7C,EAAQO,KAAI,SAAAJ,GAAM,OAAIA,EAAOQ,KAAO6C,EAAO7C,GAAKR,EAASqD,MACpEH,EAAuB,CACrBhC,QAAQ,uCAAD,OAAyCW,EAAStB,OAAlD,gCAAgFsB,EAAS5B,MAChGa,MAAM,IAER4C,YAAW,WACTR,EAAuB,QACtB,QAEJS,OAAM,SAAAC,GACLV,EAAuB,CACrBhC,QAAQ,wEAAD,OAA0EmC,EAAO9C,OAAjF,0BACPO,MAAM,IAER4C,YAAW,WACTR,EAAuB,QACtB,WAkCX,OAJAW,qBAAU,WACRC,EAAUxC,SAASM,MAAK,SAACmC,GAAD,OAAYrB,EAAWqB,QAC9C,IAGD,6BACE,kBAAC,EAAD,CAAcrD,QAASuC,IACvB,0CACA,6BACE,8CACA,kBAAC,EAAD,CAAO9D,SAlJe,SAAC6E,GAC3BpB,EAAaoB,EAAMC,OAAOC,QAiJgBhF,KAAK,UAE7C,kBAAC,EAAD,CACEQ,oBAxJsB,SAACsE,GAC3BhB,EAAagB,EAAMC,OAAOC,QAwJtBzE,kBA5JoB,SAACuE,GACzBlB,EAAWkB,EAAMC,OAAOC,QA4JpBvE,cAvCgB,SAACqE,GAGrB,OAFAA,EAAMG,iBAEEtB,EAIDE,EAIDlD,EAAQyD,MACR,SAACtD,GAAD,OAAYA,EAAOC,KAAKC,gBAAkB2C,EAAQ3C,iBAEpDiD,EAAoB,QACpBtD,EAAQyD,MAAK,SAACtD,GAAD,OAAYA,EAAOO,SAAWwC,KAC3CI,EAAoB,WAjGAE,EAkGH,CACfpD,KAAM4C,EACNtC,OAAQwC,QAnGde,EACG9B,OAAOqB,GACPzB,MAAK,SAACC,GACLa,EAAW7C,EAAQkC,OAAOF,IAC1BqB,EAAuB,CACrBhC,QAAQ,GAAD,OAAKW,EAAS5B,KAAd,qEAA+E4B,EAAStB,QAC/FO,MAAM,IAER4C,YAAW,WACTR,EAAuB,QACtB,QAEJS,OAAM,SAACC,GACNV,EAAuB,CACrBhC,QAAQ,sCAAD,OAAwCmC,EAAOpD,KAA/C,qCACPa,MAAM,IAER4C,YAAW,WACTR,EAAuB,QACtB,UAsEHA,EAAuB,CAAChC,QAAS,6CAA+CJ,MAAM,IACtF4C,YAAW,kBAAMR,EAAuB,QAAO,OAL/CA,EAAuB,CAAChC,QAAS,2CAA6CJ,MAAM,IACpF4C,YAAW,kBAAMR,EAAuB,QAAO,MAvF5B,IAACG,KA0HtB,6CACA,kBAAC,EAAD,CACExD,QAASA,EACTC,OAAQ6C,EACR5C,aAAc,SAACS,GAAD,OAzJQ,SAACA,GAC3B,IAAMR,EAASH,EAAQyD,MAAK,SAAAtD,GAAM,OAAIA,EAAOQ,KAAOA,KAChD+C,OAAOC,QAAP,wDAAgExD,EAAOC,QACzE6D,EAAU3B,UAAU3B,GACjBoB,MAAK,WACJc,EAAW7C,EAAQC,QAAO,SAAAE,GAAM,OAAIA,EAAOQ,KAAOA,MAClD0C,EAAuB,CACrBhC,QAAQ,8BAAD,OAAgClB,EAAOC,KAAvC,wCACPa,MAAM,IAER4C,YAAW,WACTR,EAAuB,QACtB,QAEJS,OAAM,SAAAC,GACLV,EAAuB,CACrBhC,QAAQ,uDAAD,OAAyDlB,EAAOC,KAAhE,sBACPa,MAAM,IAER4C,YAAW,WACTR,EAAuB,QACtB,QAoIiBkB,CAAoB5D,QC9KlD6D,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.e56b6a11.chunk.js","sourcesContent":["import React from 'react';\n\nconst Input = ({ type, onChange }) => <input onChange={onChange} type={type} />;\n\nexport default Input;","import React from \"react\";\n\nconst Button = ({ type, onClick, text }) => (\n  <button onClick={onClick} type={type}>\n    {text}\n  </button>\n);\n\nexport default Button;\n","import React from \"react\";\nimport Input from \"./Input\";\nimport Button from \"./Button\";\n\nconst Form = (props) => {\n  const { nameChangeHandler, numberChangeHandler, submitHandler } = props;\n  \n  return (\n    <form>\n      <label>Name: </label>\n      <Input onChange={nameChangeHandler} type=\"text\" />\n      <label>Number: </label>\n      <Input onChange={numberChangeHandler} type=\"number\" />\n      <Button onClick={submitHandler} type=\"submit\" text=\"submit\" />\n    </form>\n  );\n};\n\nexport default Form;\n","import React from \"react\";\nimport Button from \"./Button\";\n\nconst Persons = ({ persons, filter, clickHandler }) => (\n    <ul>\n      {persons\n        .filter((person) =>\n          person.name.toLowerCase().includes(filter.toLowerCase())\n        )\n        .map((filteredPerson) => (\n          <li key={filteredPerson.name}>\n            {filteredPerson.name} - {filteredPerson.number}\n            <Button\n              onClick={() => clickHandler(filteredPerson.id)}\n              type=\"submit\"\n              text=\"Delete\"\n            />\n          </li>\n        ))}\n    </ul>\n  );\n\nexport default Persons;\n","import React from 'react';\n\nconst Notification = ({message}) => {\n    if(message === null) return null;\n    const notificationStyle = {\n        padding: '1rem',\n        border: `2px solid ${message.fail === true ? 'red' : 'green'}`,\n        fontSize: 16,\n        borderRadius: 10\n    };\n    return (\n        <div style={notificationStyle}>\n            {message.content}\n        </div>\n    );\n};\n\nexport default Notification;","import axios from \"axios\";\nconst baseUrl = \"/api/persons\";\nconsole.log(baseUrl);\nconst getAll = async () => {\n  const request = axios.get(baseUrl);\n  const fakeRecord = { id: 999, name: \"Not-on Server\", number: '07878797865' };\n  return request.then((response) => response.data.concat(fakeRecord));\n};\n\nconst addOne = async (newObject) => {\n  const request = axios.post(baseUrl, newObject);\n  return request.then((response) => response.data);\n};\n\nconst deleteOne = async (id) => {\n  const request = axios.delete(`${baseUrl}/${id}`);\n  return request.then((response) => response.data);\n};\n\nconst updateOne = async (updatedObject) => {\n  const request = axios.put(`${baseUrl}/${updatedObject.id}`, updatedObject);\n  return request.then((response) => response.data);\n};\n\nexport default { getAll, addOne, deleteOne, updateOne };\n","import React, { useState, useEffect } from \"react\";\nimport Input from \"./components/Input\";\nimport Form from \"./components/Form\";\nimport Persons from \"./components/Persons\";\nimport Notification from \"./components/Notification\";\nimport dbService from \"./services/db\";\nimport db from \"./services/db\";\n\nconst App = () => {\n  const [persons, setPersons] = useState([]);\n  const [newFilter, setNewFilter] = useState(\"\");\n  const [newName, setNewName] = useState(\"\");\n  const [newNumber, setNewNumber] = useState(\"\");\n  const [notificationMessage, setNotificationMessage] = useState(null);\n\n  const nameChangeHandler = (event) => {\n    setNewName(event.target.value);\n  };\n  const numberChangeHandler = (event) => {\n    setNewNumber(event.target.value);\n  };\n  const filterChangeHandler = (event) => {\n    setNewFilter(event.target.value);\n  };\n\n  const removeRecordHandler = (id) => {\n    const person = persons.find(person => person.id === id);\n    if (window.confirm(`Are you sure you wish to delete the entry for ${person.name}`)){\n      dbService.deleteOne(id)\n        .then(() => {\n          setPersons(persons.filter(person => person.id !== id));\n          setNotificationMessage({\n            content: `All information related to ${person.name} has been removed from the database.`,\n            fail: false\n          });\n          setTimeout(() => {\n            setNotificationMessage(null);\n          }, 5000);\n        })\n        .catch(error => {\n          setNotificationMessage({\n            content: `It looks as though there has been an error removing ${person.name} from the database`,\n            fail: true\n          });\n          setTimeout(() => {\n            setNotificationMessage(null);\n          }, 5000);\n        });\n    }\n  };\n\n\n  const addRecordHandler = (record) => {\n    dbService\n      .addOne(record)\n      .then((response) => {\n        setPersons(persons.concat(response));\n        setNotificationMessage({\n          content: `${response.name} was successfully added to the phone book with the number ${response.number}`,\n          fail: false,\n        });\n        setTimeout(() => {\n          setNotificationMessage(null);\n        }, 5000);\n      })\n      .catch((error) => {\n        setNotificationMessage({\n          content: `There seems to have been an error. ${record.name} was not added to the phone book.`,\n          fail: true,\n        });\n        setTimeout(() => {\n          setNotificationMessage(null);\n        }, 5000);\n      });\n  };\n\n  const updateRecordHandler = (toUpdate) => {\n    if(toUpdate === 'name') {\n      let record = {...persons.find((person) => person.name.toLowerCase() === newName.toLowerCase())};\n      const message = `${record.name} is already in the phone book. Would you like to update the phone number to ${newNumber}?`;\n      if(window.confirm(message)) {\n        record.number = newNumber;\n        db.updateOne(record)\n        .then(response => {\n          setPersons(persons.map(person => person.id !== record.id ? person : record));\n          setNotificationMessage({\n            content: `The number associated with ${response.name} has been changed to ${response.number}`,\n            fail: false\n          });\n          setTimeout(() => {\n            setNotificationMessage(null);\n          }, 5000);\n        })\n        .catch(error => {\n          setNotificationMessage({\n            content: `It looks as though there has been an error. The number for ${record.name} has not been updated.`,\n            fail: true\n          });\n          setTimeout(() => {\n            setNotificationMessage(null);\n          }, 5000);\n        });\n      };\n    } else {\n      let record = {...persons.find((person) => person.number === newNumber)};\n      const message = `${record.number} is already in the phone book under the name ${record.name}. Would you like to change the name to ${newName}?`;\n      if(window.confirm(message)) {\n        record.name = newName;\n\n        db.updateOne(record)\n        .then(response => {\n          setPersons(persons.map(person => person.id !== record.id ? person : record));\n          setNotificationMessage({\n            content: `The name associated with the number ${response.number} has been changed to ${response.name}`,\n            fail: false\n          });\n          setTimeout(() => {\n            setNotificationMessage(null);\n          }, 5000);\n        })\n        .catch(error => {\n          setNotificationMessage({\n            content: `It looks as though there has been an error. The name associated with ${record.number} has not been updated.`,\n            fail: true\n          });\n          setTimeout(() => {\n            setNotificationMessage(null);\n          }, 5000);\n        });\n      };\n    }\n  };\n\n  const submitHandler = (event) => {\n    event.preventDefault();\n\n    return !newName\n      ? (\n        setNotificationMessage({content: 'It looks like you haven\\'t entered a name', fail: true}),\n        setTimeout(() => setNotificationMessage(null), 5000)\n      ) : !newNumber\n      ? (\n        setNotificationMessage({content: 'It looks like you haven\\'t entered a number', fail: true}),\n        setTimeout(() => setNotificationMessage(null), 5000)\n      ) : persons.find(\n          (person) => person.name.toLowerCase() === newName.toLowerCase()\n        )\n      ? updateRecordHandler('name')\n      : persons.find((person) => person.number === newNumber)\n      ? updateRecordHandler('number')\n      : addRecordHandler({\n          name: newName,\n          number: newNumber,\n        });\n  };\n\n\n  useEffect(() => {\n    dbService.getAll().then((people) => setPersons(people));\n  }, []);\n\n  return (\n    <div>\n      <Notification message={notificationMessage} />\n      <h2>Phone Book</h2>\n      <div>\n        <h2>Filter Results</h2>\n        <Input onChange={filterChangeHandler} type=\"text\" />\n      </div>\n      <Form\n        numberChangeHandler={numberChangeHandler}\n        nameChangeHandler={nameChangeHandler}\n        submitHandler={submitHandler}\n      />\n      <h2>Phone Numbers</h2>\n      <Persons\n        persons={persons}\n        filter={newFilter}\n        clickHandler={(id) => removeRecordHandler(id)}\n      />\n    </div>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}